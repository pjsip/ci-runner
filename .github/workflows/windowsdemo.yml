name: Windows Demo
on:
  push
jobs:
  success-case:
    runs-on: windows-latest
    name: Successful case
    steps:
    - uses: actions/checkout@master
    - name: install cirunner infrastructure
      run: .\installwindows.ps1
    - name: build testapp
      run: |
        call "%PROGRAMFILES%\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
        cl.exe /nologo /Od /Zi testapp.c
      shell: cmd
    - name: running test program
      run: python winrunner.py -- testapp.exe -t 5

  crash-case:
    runs-on: windows-latest
    name: Crash case
    steps:
    - uses: actions/checkout@master
    - name: install cirunner infrastructure
      run: .\installwindows.ps1
    - name: build testapp
      run: |
        call "%PROGRAMFILES%\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
        cl.exe /nologo /Od /Zi testapp.c
      shell: cmd
    - name: running test program
      id: running
      continue-on-error: true
      run: |
        python winrunner.py -t 60 -- testapp.exe -t 5 -c
    - name: check result
      env:
        RUNNING_OUTCOME: ${{ steps.running.outcome }}
      run: |
        if ("$env:RUNNING_OUTCOME" -ne "failure") {
          echo Expecting failure in the previous step but got "$env:RUNNING_OUTCOME"
          cmd /C exit 777
        } else {  
          echo Previous step fails as expected
          cmd /C exit 0
        }

  timeout-case:
    runs-on: windows-latest
    name: Timeout case
    steps:
    - uses: actions/checkout@master
    - name: install cirunner infrastructure
      run: .\installwindows.ps1
    - name: build testapp
      run: |
        call "%PROGRAMFILES%\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
        cl.exe /nologo /Od /Zi testapp.c
      shell: cmd
    - name: running test program
      id: running
      continue-on-error: true
      run: |
        python winrunner.py -t 5 -- testapp.exe -t 60
    - name: check result
      env:
        RUNNING_OUTCOME: ${{ steps.running.outcome }}
      run: |
        if ("$env:RUNNING_OUTCOME" -ne "failure") {
          echo Expecting failure in the previous step but got "$env:RUNNING_OUTCOME"
          cmd /C exit 777
        } else {  
          echo Previous step fails as expected
          cmd /C exit 0
        }
